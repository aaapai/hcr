<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>C# on 黄春荣</title>
        <link>http://localhost:55744/categories/c%23/</link>
        <description>Recent content in C# on 黄春荣</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>unity复习手册</copyright><atom:link href="http://localhost:55744/categories/c%23/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>C#语法</title>
        <link>http://localhost:55744/p/my-first-post/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:55744/p/my-first-post/</guid>
        <description>&lt;h3 id=&#34;变量&#34;&gt;&lt;em&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;变量分为引用了类型和值类型，一下是他们的主要区别：&lt;br&gt;
1.内存分配：&lt;br&gt;
值类型的变量直接存储数据，通常分配在栈上，栈内存的分配和释放速度较快，适合存储较小的数据&lt;br&gt;
引用类型的变量存储的是对象的引用（内存地址），而实际上数据存储在堆上，堆内存的分配和释放速度较慢，适合存储大量的数据。&lt;br&gt;
2.生命周期&lt;br&gt;
值类型的变量在使用完毕后会被自动回收，而引用类型的变量需要垃圾回收机制（GC）来管理内存。 &lt;br&gt;
3.装箱与拆箱&lt;br&gt;
装箱：将值类型转换为引用类型。装箱会创建一个新的对象，并将值类型的数据复制到该对象中。&lt;br&gt;
拆箱：将引用类型转换为值类型。拆箱会从对象中复制数据到值类型变量中。拆箱需要显式类型转换&lt;br&gt;
4.类型举例&lt;br&gt;
值类型：int float bool char double struct enum等，默认值不为空&lt;br&gt;
引用类型：class string interface delegate array等，默认值为null&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
